name: "Pre-Integration"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  dotnet-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 9.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 📐 Ensure nuget.org added as package source on Windows
        if: matrix.os == 'windows-latest'
        run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org --configfile $env:APPDATA\NuGet\NuGet.Config
        continue-on-error: true

      - name: 🔁 Restore packages
        run: dotnet restore

      - name: 🛠️ Building library in release mode
        run: dotnet build -c Release --no-restore

  dotnet-test:
    runs-on: ubuntu-latest
    needs:
      - dotnet-build
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 9.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 🔁 Restore packages
        run: dotnet restore

      - name: 🛠️ Build
        run: dotnet build -c Release --no-restore /p:UseSourceLink=true

      - name: 🧪 Run unit tests
        run: dotnet test -c Release --no-build --filter "Category!=Integration"

  smoke-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs:
      - dotnet-test
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 9.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 📐 Ensure nuget.org added as package source on Windows
        if: matrix.os == 'windows-latest'
        run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org --configfile $env:APPDATA\NuGet\NuGet.Config
        continue-on-error: true

      - name: 🔁 Restore packages
        run: dotnet restore

      - name: 🛠️ Build with dotnet
        run: dotnet build Atc.Rest.Api.Generator.slnx

      - name: ⬇️🌎 Download Swagger Petstore v3 spec
        run: curl -O https://petstore3.swagger.io/api/v3/openapi.yaml

      - name: ⚙️ Generate Code
        run: dotnet run -- generate server all -p "Swagger Petstore" -s ../../openapi.yaml --outputSlnPath ../../petstore3/ --outputSrcPath ../../petstore3/src --outputTestPath ../../petstore3/test --optionsPath ../../ApiGeneratorOptions.json --disableCodingRules --verbose
        working-directory: src/Atc.Rest.ApiGenerator.CLI

      - name: 🛠️ Build Generated Code
        run: dotnet build
        working-directory: petstore3
