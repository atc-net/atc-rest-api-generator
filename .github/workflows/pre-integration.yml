name: "Pre-Integration"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  dotnet5-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: 🧹 Clean
        run: dotnet clean -c Release && dotnet nuget locals all --clear

      - name: 🔁 Restore packages
        run: dotnet restore

      - name: 🛠️ Building library in release mode
        run: dotnet build -c Release -p:ContinuousIntegrationBuild=true --no-restore

  dotnet-test:
    runs-on: ubuntu-latest
    needs:
      - dotnet5-build
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: ⚙️ Setup dotnet 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: 📋 Prepare build for unit tests
        run: |
          dotnet clean -c Debug
          dotnet restore
          dotnet build -c Debug /p:UseSourceLink=true --no-restore

      - name: 🧪 Run unit tests
        run: dotnet test -c Debug --no-build

  smoke-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs:
      - dotnet-test
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: ⚙️ Setup dotnet 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: 🧹 Clean
        run: dotnet clean -c Release && dotnet nuget locals all --clear

      - name: 🔁 Restore packages
        run: dotnet restore

      - name: 🛠️ Build with dotnet
        run: dotnet build Atc.Rest.Api.Generator.sln

      - name: ⬇️🌎 Download Swagger Petstore v3 spec
        run: curl -O https://petstore3.swagger.io/api/v3/openapi.yaml

      - name: ⚙️ Generate Code
        run: dotnet run -- generate server all -p "Swagger Petstore" -s ../../openapi.yaml --outputSlnPath ../../petstore3/ --outputSrcPath ../../petstore3/src --outputTestPath ../../petstore3/test --optionsPath ../../sample/Demo.ApiDesign/ApiGeneratorOptions.json -v true
        working-directory: src/Atc.Rest.ApiGenerator.CLI

      - name: 🛠️ Build Generated Code
        run: dotnet build
        working-directory: petstore3
