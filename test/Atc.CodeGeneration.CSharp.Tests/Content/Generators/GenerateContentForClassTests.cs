namespace Atc.CodeGeneration.CSharp.Tests.Content.Generators;

public class GenerateContentForClassTests : GenerateContentBaseTests
{
    [Fact]
    public void Scenario_Erut_CreateLocation_ForApiClientEndpoint()
    {
        const string expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace ERUT.ApiClient.Generated.Endpoints;

/// <summary>
/// Client Endpoint.
/// Description: Create a new location.
/// Operation: CreateLocation.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
public class CreateLocationEndpoint : ICreateLocationEndpoint
{
    private readonly IHttpClientFactory factory;
    private readonly IHttpMessageFactory httpMessageFactory;

    public CreateLocationEndpoint(
        IHttpClientFactory factory,
        IHttpMessageFactory httpMessageFactory)
    {
        this.factory = factory;
        this.httpMessageFactory = httpMessageFactory;
    }

    public async Task<CreateLocationEndpointResult> ExecuteAsync(
        CreateLocationParameters parameters,
        CancellationToken cancellationToken = default)
    {
        var client = factory.CreateClient(""ERUT-ApiClient"");

        var requestBuilder = httpMessageFactory.FromTemplate(""/api/v1/locations"");
        requestBuilder.WithBody(parameters.Request);

        using var requestMessage = requestBuilder.Build(HttpMethod.Post);
        using var response = await client.SendAsync(requestMessage, cancellationToken);

        var responseBuilder = httpMessageFactory.FromResponse(response);
        responseBuilder.AddSuccessResponse<Location>(HttpStatusCode.OK);
        responseBuilder.AddErrorResponse<ValidationProblemDetails>(HttpStatusCode.BadRequest);
        responseBuilder.AddErrorResponse<ProblemDetails>(HttpStatusCode.Unauthorized);
        responseBuilder.AddErrorResponse<ProblemDetails>(HttpStatusCode.Forbidden);
        responseBuilder.AddErrorResponse<ProblemDetails>(HttpStatusCode.InternalServerError);

        return await responseBuilder.BuildResponseAsync(x => new CreateLocationEndpointResult(x), cancellationToken);
    }
}";

        var documentationTags = new CodeDocumentationTags(
            "Client Endpoint.\r\nDescription: Create a new location.\r\nOperation: CreateLocation.");

        var attributes = new List<AttributeParameters>
            {
                new("GeneratedCode", "\"ApiGenerator\", \"X.X.X.X\""),
            };

        const string executeMethodeContent =
            @"var client = factory.CreateClient(""ERUT-ApiClient"");

var requestBuilder = httpMessageFactory.FromTemplate(""/api/v1/locations"");
requestBuilder.WithBody(parameters.Request);

using var requestMessage = requestBuilder.Build(HttpMethod.Post);
using var response = await client.SendAsync(requestMessage, cancellationToken);

var responseBuilder = httpMessageFactory.FromResponse(response);
responseBuilder.AddSuccessResponse<Location>(HttpStatusCode.OK);
responseBuilder.AddErrorResponse<ValidationProblemDetails>(HttpStatusCode.BadRequest);
responseBuilder.AddErrorResponse<ProblemDetails>(HttpStatusCode.Unauthorized);
responseBuilder.AddErrorResponse<ProblemDetails>(HttpStatusCode.Forbidden);
responseBuilder.AddErrorResponse<ProblemDetails>(HttpStatusCode.InternalServerError);

return await responseBuilder.BuildResponseAsync(x => new CreateLocationEndpointResult(x), cancellationToken);";

        var constructorParameters = new List<ConstructorParameters>
        {
            new(
                DocumentationTags: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "CreateLocationEndpoint",
                InheritedClassTypeName: null,
                Parameters: new List<ConstructorParameterBaseParameters>
                {
                    new(
                        GenericTypeName: null,
                        TypeName: "IHttpClientFactory",
                        Name: "factory",
                        DefaultValue: null,
                        PassToInheritedClass: false,
                        CreateAsPrivateReadonlyMember: true),
                    new(
                        GenericTypeName: null,
                        TypeName: "IHttpMessageFactory",
                        Name: "httpMessageFactory",
                        DefaultValue: null,
                        PassToInheritedClass: false,
                        CreateAsPrivateReadonlyMember: true),
                }),
        };

        var methodParameters = new List<MethodParameters>
            {
                new(
                    DocumentationTags: null,
                    Attributes: null,
                    AccessModifier: AccessModifiers.Public,
                    UseAsyncKeyword: true,
                    ReturnTypeName: "CreateLocationEndpointResult",
                    ReturnGenericTypeName: "Task",
                    Name: "ExecuteAsync",
                    Parameters: new List<PropertyParameters>
                    {
                        new(
                            DocumentationTags: null,
                            Attributes: null,
                            AccessModifier: AccessModifiers.None,
                            GenericTypeName: null,
                            TypeName: "CreateLocationParameters",
                            Name: "parameters",
                            DefaultValue: null,
                            UseAutoProperty: false,
                            UseSet: false,
                            UseGet: false,
                            UseExpressionBody: false,
                            Content: null),
                        new(
                            DocumentationTags: null,
                            Attributes: null,
                            AccessModifier: AccessModifiers.None,
                            GenericTypeName: null,
                            TypeName: "CancellationToken",
                            Name: "cancellationToken",
                            DefaultValue: "default",
                            UseAutoProperty: false,
                            UseSet: false,
                            UseGet: false,
                            UseExpressionBody: false,
                            Content: "default"),
                    },
                    UseExpressionBody: false,
                    Content: executeMethodeContent),
            };

        var classParameters = new ClassParameters(
            HeaderContent: HeaderContent,
            Namespace: "ERUT.ApiClient.Generated.Endpoints",
            DocumentationTags: documentationTags,
            Attributes: attributes,
            AccessModifier: AccessModifiers.Public,
            ClassTypeName: "CreateLocationEndpoint",
            InheritedClassTypeName: "ICreateLocationEndpoint",
            InheritedGenericClassTypeName: null,
            InheritedInterfaceTypeName: null,
            Constructors: constructorParameters,
            Properties: null,
            Methods: methodParameters);

        var sut = new GenerateContentForClass(
            codeDocumentationTagsGenerator,
            classParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }

    [Fact]
    public void Scenario_Erut_CreateLocation_ForApiClientEndpointResult()
    {
        const string expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace ERUT.ApiClient.Generated.Endpoints;

/// <summary>
/// Client Endpoint result.
/// Description: Create a new location.
/// Operation: CreateLocation.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
public class CreateLocationEndpointResult : EndpointResponse, ICreateLocationEndpointResult
{
    public CreateLocationEndpointResult(EndpointResponse response)
        : base(response)
    {
    }

    public bool IsOk
        => StatusCode == HttpStatusCode.OK;

    public bool IsBadRequest
        => StatusCode == HttpStatusCode.BadRequest;

    public bool IsUnauthorized
        => StatusCode == HttpStatusCode.Unauthorized;

    public bool IsForbidden
        => StatusCode == HttpStatusCode.Forbidden;

    public bool IsInternalServerError
        => StatusCode == HttpStatusCode.InternalServerError;

    public Location OkContent
        => IsOk && ContentObject is Location result
            ? result
            : throw new InvalidOperationException(""Content is not the expected type - please use the IsOk property first."");

    public ValidationProblemDetails BadRequestContent
        => IsBadRequest && ContentObject is ValidationProblemDetails result
            ? result
            : throw new InvalidOperationException(""Content is not the expected type - please use the IsBadRequest property first."");

    public ProblemDetails UnauthorizedContent
        => IsUnauthorized && ContentObject is ProblemDetails result
            ? result
            : throw new InvalidOperationException(""Content is not the expected type - please use the IsUnauthorized property first."");

    public ProblemDetails ForbiddenContent
        => IsForbidden && ContentObject is ProblemDetails result
            ? result
            : throw new InvalidOperationException(""Content is not the expected type - please use the IsForbidden property first."");

    public ProblemDetails InternalServerErrorContent
        => IsInternalServerError && ContentObject is ProblemDetails result
            ? result
            : throw new InvalidOperationException(""Content is not the expected type - please use the IsInternalServerError property first."");
}";

        var documentationTags = new CodeDocumentationTags(
            "Client Endpoint result.\r\nDescription: Create a new location.\r\nOperation: CreateLocation.");

        var attributes = new List<AttributeParameters>
        {
            new("GeneratedCode", "\"ApiGenerator\", \"X.X.X.X\""),
        };

        var constructorParameters = new List<ConstructorParameters>
        {
            new(
                DocumentationTags: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "CreateLocationEndpointResult",
                InheritedClassTypeName: "base",
                Parameters: new List<ConstructorParameterBaseParameters>
                {
                    new(
                        GenericTypeName: null,
                        TypeName: "EndpointResponse",
                        Name: "response",
                        DefaultValue: null,
                        PassToInheritedClass: true,
                        CreateAsPrivateReadonlyMember: false),
                }),
        };

        var propertyParameters = new List<PropertyParameters>
        {
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "bool",
                Name: "IsOk",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "StatusCode == HttpStatusCode.OK"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "bool",
                Name: "IsBadRequest",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "StatusCode == HttpStatusCode.BadRequest"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "bool",
                Name: "IsUnauthorized",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "StatusCode == HttpStatusCode.Unauthorized"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "bool",
                Name: "IsForbidden",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "StatusCode == HttpStatusCode.Forbidden"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "bool",
                Name: "IsInternalServerError",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "StatusCode == HttpStatusCode.InternalServerError"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "Location",
                Name: "OkContent",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "IsOk && ContentObject is Location result\r\n    ? result\r\n    : throw new InvalidOperationException(\"Content is not the expected type - please use the IsOk property first.\")"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "ValidationProblemDetails",
                Name: "BadRequestContent",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "IsBadRequest && ContentObject is ValidationProblemDetails result\r\n    ? result\r\n    : throw new InvalidOperationException(\"Content is not the expected type - please use the IsBadRequest property first.\")"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "ProblemDetails",
                Name: "UnauthorizedContent",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "IsUnauthorized && ContentObject is ProblemDetails result\r\n    ? result\r\n    : throw new InvalidOperationException(\"Content is not the expected type - please use the IsUnauthorized property first.\")"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "ProblemDetails",
                Name: "ForbiddenContent",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "IsForbidden && ContentObject is ProblemDetails result\r\n    ? result\r\n    : throw new InvalidOperationException(\"Content is not the expected type - please use the IsForbidden property first.\")"),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.Public,
                GenericTypeName: null,
                TypeName: "ProblemDetails",
                Name: "InternalServerErrorContent",
                DefaultValue: null,
                UseAutoProperty: false,
                UseGet: false,
                UseSet: false,
                UseExpressionBody: true,
                Content: "IsInternalServerError && ContentObject is ProblemDetails result\r\n    ? result\r\n    : throw new InvalidOperationException(\"Content is not the expected type - please use the IsInternalServerError property first.\")"),
        };

        var classParameters = new ClassParameters(
            HeaderContent: HeaderContent,
            Namespace: "ERUT.ApiClient.Generated.Endpoints",
            DocumentationTags: documentationTags,
            Attributes: attributes,
            AccessModifier: AccessModifiers.Public,
            ClassTypeName: "CreateLocationEndpointResult",
            InheritedClassTypeName: "EndpointResponse",
            InheritedGenericClassTypeName: null,
            InheritedInterfaceTypeName: "ICreateLocationEndpointResult",
            Constructors: constructorParameters,
            Properties: propertyParameters,
            Methods: null);

        var sut = new GenerateContentForClass(
            codeDocumentationTagsGenerator,
            classParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }
}