namespace Atc.CodeGeneration.CSharp.Tests.Content.Generators;

public class GenerateContentForEnumTests : GenerateContentBaseTests
{
    [Fact]
    public void Scenario_Demo_ColorType()
    {
        const string expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Demo.Api.Generated.Contracts;

/// <summary>
/// Enumeration: ColorType.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
[Flags]
public enum ColorType
{
    None = 0,
    Black = 1,
    White = 2,
    Yellow = 4,
    Red = 8,
}";
        var documentationTags = new CodeDocumentationTags(
            "Enumeration: ColorType.");

        var attributes = new List<AttributeParameters>
        {
            new("GeneratedCode", "\"ApiGenerator\", \"X.X.X.X\""),
        };

        var enumParameters = new EnumParameters(
            HeaderContent: HeaderContent,
            Namespace: "Demo.Api.Generated.Contracts",
            DocumentationTags: documentationTags,
            Attributes: attributes,
            AccessModifier: AccessModifiers.Public,
            EnumTypeName: "ColorType",
            UseFlag: true,
            new List<EnumValueParameters>
            {
                new(null, null, "None", 0),
                new(null, null, "Black", 1),
                new(null, null, "White", 2),
                new(null, null, "Yellow", 4),
                new(null, null, "Red", 8),
            });

        var sut = new GenerateContentForEnum(
            codeDocumentationTagsGenerator,
            enumParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }

    [Fact]
    public void Scenario_Demo_GenderType()
    {
        const string expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Demo.Api.Generated.Contracts;

/// <summary>
/// Enumeration: GenderType.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
public enum GenderType
{
    None,
    NonBinary,
    Male,
    Female,
}";
        var documentationTags = new CodeDocumentationTags(
            "Enumeration: GenderType.");

        var attributes = new List<AttributeParameters>
        {
            new("GeneratedCode", "\"ApiGenerator\", \"X.X.X.X\""),
        };

        var enumParameters = new EnumParameters(
            HeaderContent: HeaderContent,
            Namespace: "Demo.Api.Generated.Contracts",
            DocumentationTags: documentationTags,
            Attributes: attributes,
            AccessModifier: AccessModifiers.Public,
            EnumTypeName: "GenderType",
            UseFlag: false,
            new List<EnumValueParameters>
            {
                new(null, null, "None", null),
                new(null, null, "NonBinary", null),
                new(null, null, "Male", null),
                new(null, null, "Female", null),
            });

        var sut = new GenerateContentForEnum(
            codeDocumentationTagsGenerator,
            enumParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }
}