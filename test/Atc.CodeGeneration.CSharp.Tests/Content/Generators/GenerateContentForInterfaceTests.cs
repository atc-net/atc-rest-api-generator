namespace Atc.CodeGeneration.CSharp.Tests.Content.Generators;

public class GenerateContentForInterfaceTests : GenerateContentBaseTests
{
    [Fact]
    public void Empty()
    {
        const string expectedCode =
            @"namespace App.MyNamespace;

public interface MyInterface
{
}";

        var interfaceParameters = new InterfaceParameters(
            HeaderContent: null,
            Namespace: "App.MyNamespace",
            DocumentationTags: null,
            Attributes: null,
            AccessModifier: AccessModifiers.Public,
            InterfaceTypeName: "MyInterface",
            InheritedInterfaceTypeName: null,
            Properties: null,
            Methods: null);

        var sut = new GenerateContentForInterface(
            CodeDocumentationTagsGenerator,
            interfaceParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }

    [Fact]
    public void EmptyWithInheritedInterface()
    {
        const string expectedCode =
            @"namespace App.MyNamespace;

public interface MyInterface : MyInterfaceBase
{
}";

        var interfaceParameters = new InterfaceParameters(
            HeaderContent: null,
            Namespace: "App.MyNamespace",
            DocumentationTags: null,
            Attributes: null,
            AccessModifier: AccessModifiers.Public,
            InterfaceTypeName: "MyInterface",
            InheritedInterfaceTypeName: "MyInterfaceBase",
            Properties: null,
            Methods: null);

        var sut = new GenerateContentForInterface(
            CodeDocumentationTagsGenerator,
            interfaceParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }

    [Fact]
    public void Scenario_Demo_SetAccountName_ForDomainRequestHandler()
    {
        const string expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Demo.Api.Generated.Contracts.Accounts;

/// <summary>
/// Domain Interface for RequestHandler.
/// Description: Set name of account.
/// Operation: SetAccountName.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
public interface ISetAccountNameHandler
{
    /// <summary>
    /// Execute method.
    /// </summary>
    /// <param name=""parameters"">The parameters.</param>
    /// <param name=""cancellationToken"">The cancellation token.</param>
    Task<SetAccountNameResult> ExecuteAsync(
        SetAccountNameParameters parameters,
        CancellationToken cancellationToken = default);
}";

        var documentationTags = new CodeDocumentationTags(
            "Domain Interface for RequestHandler.\r\nDescription: Set name of account.\r\nOperation: SetAccountName.");

        var methodParameters = new List<MethodParameters>
        {
            new(
                DocumentationTags: new CodeDocumentationTags(
                    "Execute method",
                    parameters: new Dictionary<string, string>(StringComparer.Ordinal)
                    {
                        { "parameters", "The parameters." },
                        { "cancellationToken", "The cancellation token." },
                    },
                    remark: null,
                    code: null,
                    example: null,
                    exceptions: null,
                    @return: null),
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                ReturnTypeName: "SetAccountNameResult",
                ReturnGenericTypeName: "Task",
                Name: "ExecuteAsync",
                Parameters: new List<ParameterBaseParameters>
                {
                    new(
                        Attributes: null,
                        GenericTypeName: null,
                        IsGenericListType: false,
                        TypeName: "SetAccountNameParameters",
                        IsNullableType: false,
                        IsReferenceType: true,
                        Name: "parameters",
                        DefaultValue: null),
                    new(
                        Attributes: null,
                        GenericTypeName: null,
                        IsGenericListType: false,
                        TypeName: "CancellationToken",
                        IsNullableType: false,
                        IsReferenceType: true,
                        Name: "cancellationToken",
                        DefaultValue: "default"),
                },
                AlwaysBreakDownParameters: false,
                UseExpressionBody: false,
                Content: null),
        };

        var interfaceParameters = new InterfaceParameters(
            HeaderContent: HeaderContent,
            Namespace: "Demo.Api.Generated.Contracts.Accounts",
            DocumentationTags: documentationTags,
            Attributes: AttributesWithGeneratedCode,
            AccessModifier: AccessModifiers.Public,
            InterfaceTypeName: "ISetAccountNameHandler",
            InheritedInterfaceTypeName: null,
            Properties: null,
            Methods: methodParameters);

        var sut = new GenerateContentForInterface(
            CodeDocumentationTagsGenerator,
            interfaceParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }

    [Fact]
    public void Scenario_Demo_UpdateAccountName_ForDomainRequestHandler()
    {
        var expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Demo.Api.Generated.Contracts.Accounts;

/// <summary>
/// Domain Interface for RequestHandler.
/// Description: Update name of account.
/// Operation: UpdateAccountName.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
public interface IUpdateAccountNameHandler
{
    /// <summary>
    /// Execute method.
    /// </summary>
    /// <param name=""parameters"">The parameters.</param>
    /// <param name=""cancellationToken"">The cancellation token.</param>
    Task<UpdateAccountNameResult> ExecuteAsync(
        UpdateAccountNameParameters parameters,
        CancellationToken cancellationToken = default);
}";

        var documentationTags = new CodeDocumentationTags(
            "Domain Interface for RequestHandler.\r\nDescription: Update name of account.\r\nOperation: UpdateAccountName.");

        var methodParameters = new List<MethodParameters>
        {
            new(
                DocumentationTags: new CodeDocumentationTags(
                    "Execute method",
                    parameters: new Dictionary<string, string>(StringComparer.Ordinal)
                    {
                        { "parameters", "The parameters." },
                        { "cancellationToken", "The cancellation token." },
                    },
                    remark: null,
                    code: null,
                    example: null,
                    exceptions: null,
                    @return: null),
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                ReturnTypeName: "UpdateAccountNameResult",
                ReturnGenericTypeName: "Task",
                Name: "ExecuteAsync",
                Parameters: new List<ParameterBaseParameters>
                {
                    new(
                        Attributes: null,
                        GenericTypeName: null,
                        IsGenericListType: false,
                        TypeName: "UpdateAccountNameParameters",
                        IsNullableType: false,
                        IsReferenceType: true,
                        Name: "parameters",
                        DefaultValue: null),
                    new(
                        Attributes: null,
                        GenericTypeName: null,
                        IsGenericListType: false,
                        TypeName: "CancellationToken",
                        IsNullableType: false,
                        IsReferenceType: true,
                        Name: "cancellationToken",
                        DefaultValue: "default"),
                },
                AlwaysBreakDownParameters: false,
                UseExpressionBody: false,
                Content: null),
        };

        var interfaceParameters = new InterfaceParameters(
            HeaderContent: HeaderContent,
            Namespace: "Demo.Api.Generated.Contracts.Accounts",
            DocumentationTags: documentationTags,
            Attributes: AttributesWithGeneratedCode,
            AccessModifier: AccessModifiers.Public,
            InterfaceTypeName: "IUpdateAccountNameHandler",
            InheritedInterfaceTypeName: null,
            Properties: null,
            Methods: methodParameters);

        var sut = new GenerateContentForInterface(
            CodeDocumentationTagsGenerator,
            interfaceParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }

    [Fact]
    public void Scenario_CreateLocation_ForApiClientEndpoint()
    {
        const string expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace XXX.ApiClient.Generated.Endpoints;

/// <summary>
/// Interface for Client Endpoint.
/// Description: Create a new location.
/// Operation: CreateLocation.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
public interface ICreateLocationEndpoint
{
    /// <summary>
    /// Execute method.
    /// </summary>
    /// <param name=""parameters"">The parameters.</param>
    /// <param name=""cancellationToken"">The cancellation token.</param>
    Task<ICreateLocationEndpointResult> ExecuteAsync(
        CreateLocationParameters parameters,
        CancellationToken cancellationToken = default);
}";

        var documentationTags = new CodeDocumentationTags(
            "Interface for Client Endpoint.\r\nDescription: Create a new location.\r\nOperation: CreateLocation.");

        var methodParameters = new List<MethodParameters>
        {
            new(
                DocumentationTags: new CodeDocumentationTags(
                    "Execute method",
                    parameters: new Dictionary<string, string>(StringComparer.Ordinal)
                    {
                        { "parameters", "The parameters." },
                        { "cancellationToken", "The cancellation token." },
                    },
                    remark: null,
                    code: null,
                    example: null,
                    exceptions: null,
                    @return: null),
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                ReturnTypeName: "ICreateLocationEndpointResult",
                ReturnGenericTypeName: "Task",
                Name: "ExecuteAsync",
                Parameters: new List<ParameterBaseParameters>
                {
                    new(
                        Attributes: null,
                        GenericTypeName: null,
                        IsGenericListType: false,
                        TypeName: "CreateLocationParameters",
                        IsNullableType: false,
                        IsReferenceType: true,
                        Name: "parameters",
                        DefaultValue: null),
                    new(
                        Attributes: null,
                        GenericTypeName: null,
                        IsGenericListType: false,
                        TypeName: "CancellationToken",
                        IsNullableType: false,
                        IsReferenceType: true,
                        Name: "cancellationToken",
                        DefaultValue: "default"),
                },
                AlwaysBreakDownParameters: false,
                UseExpressionBody: false,
                Content: null),
        };

        var interfaceParameters = new InterfaceParameters(
            HeaderContent: HeaderContent,
            Namespace: "XXX.ApiClient.Generated.Endpoints",
            DocumentationTags: documentationTags,
            Attributes: AttributesWithGeneratedCode,
            AccessModifier: AccessModifiers.Public,
            InterfaceTypeName: "ICreateLocationEndpoint",
            InheritedInterfaceTypeName: null,
            Properties: null,
            Methods: methodParameters);

        var sut = new GenerateContentForInterface(
            CodeDocumentationTagsGenerator,
            interfaceParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }

    [Fact]
    public void Scenario_CreateLocation_ForApiClientEndpointResult()
    {
        const string expectedCode =
            @"//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator X.X.X.X.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace XXX.ApiClient.Generated.Endpoints;

/// <summary>
/// Interface for Client Endpoint Result.
/// Description: Create a new location.
/// Operation: CreateLocation.
/// </summary>
[GeneratedCode(""ApiGenerator"", ""X.X.X.X"")]
public interface ICreateLocationEndpointResult : IEndpointResponse
{
    bool IsOk { get; }

    bool IsBadRequest { get; }

    bool IsUnauthorized { get; }

    bool IsForbidden { get; }

    bool IsInternalServerError { get; }

    Location OkContent { get; }

    ValidationProblemDetails BadRequestContent { get; }

    ProblemDetails UnauthorizedContent { get; }

    ProblemDetails ForbiddenContent { get; }

    ProblemDetails InternalServerErrorContent { get; }
}";

        var documentationTags = new CodeDocumentationTags(
            "Interface for Client Endpoint Result.\r\nDescription: Create a new location.\r\nOperation: CreateLocation.");

        var propertyParameters = new List<PropertyParameters>
        {
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "bool",
                IsNullableType: false,
                IsReferenceType: false,
                Name: "IsOk",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "bool",
                IsNullableType: false,
                IsReferenceType: false,
                Name: "IsBadRequest",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "bool",
                IsNullableType: false,
                IsReferenceType: false,
                Name: "IsUnauthorized",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "bool",
                IsNullableType: false,
                IsReferenceType: false,
                Name: "IsForbidden",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "bool",
                IsNullableType: false,
                IsReferenceType: false,
                Name: "IsInternalServerError",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "Location",
                IsNullableType: false,
                IsReferenceType: true,
                Name: "OkContent",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "ValidationProblemDetails",
                IsNullableType: false,
                IsReferenceType: true,
                Name: "BadRequestContent",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "ProblemDetails",
                IsNullableType: false,
                IsReferenceType: true,
                Name: "UnauthorizedContent",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "ProblemDetails",
                IsNullableType: false,
                IsReferenceType: true,
                Name: "ForbiddenContent",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
            new(
                DocumentationTags: null,
                Attributes: null,
                AccessModifier: AccessModifiers.None,
                GenericTypeName: null,
                IsGenericListType: false,
                TypeName: "ProblemDetails",
                IsNullableType: false,
                IsReferenceType: true,
                Name: "InternalServerErrorContent",
                JsonName: null,
                DefaultValue: null,
                UseAutoProperty: true,
                UseGet: true,
                UseSet: false,
                UseExpressionBody: false,
                Content: null),
        };

        var interfaceParameters = new InterfaceParameters(
            HeaderContent: HeaderContent,
            Namespace: "XXX.ApiClient.Generated.Endpoints",
            DocumentationTags: documentationTags,
            Attributes: AttributesWithGeneratedCode,
            AccessModifier: AccessModifiers.Public,
            InterfaceTypeName: "ICreateLocationEndpointResult",
            InheritedInterfaceTypeName: "IEndpointResponse",
            Properties: propertyParameters,
            Methods: null);

        var sut = new GenerateContentForInterface(
            CodeDocumentationTagsGenerator,
            interfaceParameters);

        var generatedCode = sut.Generate();

        Assert.NotNull(generatedCode);
        Assert.Equal(expectedCode, generatedCode);
    }
}