using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Scenario2.Api.Generated.Contracts.Tasks;

//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator x.x.x.x.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Scenario2.Api.Generated.Endpoints
{
    /// <summary>
    /// Endpoint definitions.
    /// Area: Tasks.
    /// </summary>
    [ApiController]
    [Route("/api/v1/tasks")]
    [GeneratedCode("ApiGenerator", "x.x.x.x")]
    public class TasksController : ControllerBase
    {
        /// <summary>
        /// Description: Returns tasks.
        /// Operation: GetTasks.
        /// Area: Tasks.
        /// </summary>
        [HttpGet]
        [ProducesResponseType(typeof(List<Scenario2.Api.Generated.Contracts.Tasks.Task>), StatusCodes.Status200OK)]
        public Task<ActionResult> GetTasksAsync([FromServices] IGetTasksHandler handler, CancellationToken cancellationToken)
        {
            if (handler is null)
            {
                throw new ArgumentNullException(nameof(handler));
            }

            return InvokeGetTasksAsync(handler, cancellationToken);
        }

        private static async Task<ActionResult> InvokeGetTasksAsync([FromServices] IGetTasksHandler handler, CancellationToken cancellationToken)
        {
            return await handler.ExecuteAsync(cancellationToken);
        }
    }
}