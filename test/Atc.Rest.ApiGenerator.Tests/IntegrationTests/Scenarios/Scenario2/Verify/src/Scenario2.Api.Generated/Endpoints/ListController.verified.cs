//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator x.x.x.x.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Scenario2.Api.Generated.Endpoints
{
    /// <summary>
    /// Endpoint definitions.
    /// Area: List.
    /// </summary>
    [ApiController]
    [Route("/api/v1/list")]
    [GeneratedCode("ApiGenerator", "x.x.x.x")]
    public class ListController : ControllerBase
    {
        /// <summary>
        /// Description: Your GET endpoint.
        /// Operation: GetListOfInts.
        /// Area: List.
        /// </summary>
        [HttpGet("int")]
        [ProducesResponseType(typeof(List<int>), StatusCodes.Status200OK)]
        public Task<ActionResult> GetListOfIntsAsync([FromServices] IGetListOfIntsHandler handler, CancellationToken cancellationToken)
        {
            if (handler is null)
            {
                throw new ArgumentNullException(nameof(handler));
            }

            return InvokeGetListOfIntsAsync(handler, cancellationToken);
        }

        /// <summary>
        /// Description: Your GET endpoint.
        /// Operation: GetListOfStrings.
        /// Area: List.
        /// </summary>
        [HttpGet("string")]
        [ProducesResponseType(typeof(List<string>), StatusCodes.Status200OK)]
        public Task<ActionResult> GetListOfStringsAsync([FromServices] IGetListOfStringsHandler handler, CancellationToken cancellationToken)
        {
            if (handler is null)
            {
                throw new ArgumentNullException(nameof(handler));
            }

            return InvokeGetListOfStringsAsync(handler, cancellationToken);
        }

        private static async Task<ActionResult> InvokeGetListOfIntsAsync([FromServices] IGetListOfIntsHandler handler, CancellationToken cancellationToken)
        {
            return await handler.ExecuteAsync(cancellationToken);
        }

        private static async Task<ActionResult> InvokeGetListOfStringsAsync([FromServices] IGetListOfStringsHandler handler, CancellationToken cancellationToken)
        {
            return await handler.ExecuteAsync(cancellationToken);
        }
    }
}