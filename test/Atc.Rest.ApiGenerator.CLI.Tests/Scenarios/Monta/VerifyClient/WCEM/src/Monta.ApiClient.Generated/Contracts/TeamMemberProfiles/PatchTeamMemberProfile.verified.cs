//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator x.x.x.x.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Monta.ApiClient.Generated.Contracts.TeamMemberProfiles;

/// <summary>
/// PatchTeamMemberProfile.
/// </summary>
[GeneratedCode("ApiGenerator", "x.x.x.x")]
public class PatchTeamMemberProfile
{
    /// <summary>
    /// Name for the team member profile.
    /// </summary>
    public string? Name { get; set; }

    /// <summary>
    /// Description for the team member profile.
    /// </summary>
    public string? Description { get; set; }

    /// <summary>
    /// Role for the team member profile.
    /// </summary>
    public TeamMemberRole? Role { get; set; }

    /// <summary>
    /// The price group for the team member profile.
    /// </summary>
    public long? PriceGroupId { get; set; }

    /// <summary>
    /// The cost group for the team member profile.
    /// </summary>
    public long? CostGroupId { get; set; }

    /// <summary>
    /// Gives the team member access to pay with team wallet when charging.
    /// </summary>
    public bool? CanPayWithTeamWallet { get; set; } = false;

    /// <summary>
    /// Gives the team member access to withdraw and deposit from your team wallet to your bank account.
    /// </summary>
    public bool? CanManageTeamWallet { get; set; } = false;

    /// <summary>
    /// Allows the team member to request sponsoring from this team for their charge point.
    /// </summary>
    public bool? CanRequestSponsoring { get; set; } = false;

    /// <summary>
    /// Allows the team member to view and manage other members settings.
    /// </summary>
    public bool? CanManageTeamMembers { get; set; } = false;

    public TeamWalletChargePaymentType? TeamWalletChargePaymentType { get; set; }

    /// <summary>
    /// Allows the team member profile to configure charge points.
    /// </summary>
    public bool? CanConfigureChargePoints { get; set; } = false;

    /// <summary>
    /// List of country ids for which the team member can pay for charges.
    /// </summary>
    public List<int>? CanPayForChargesCountryIds { get; set; } = new List<int>();

    /// <inheritdoc />
    public override string ToString()
        => $"{nameof(Name)}: {Name}, {nameof(Description)}: {Description}, {nameof(Role)}: ({Role}), {nameof(PriceGroupId)}: {PriceGroupId}, {nameof(CostGroupId)}: {CostGroupId}, {nameof(CanPayWithTeamWallet)}: {CanPayWithTeamWallet}, {nameof(CanManageTeamWallet)}: {CanManageTeamWallet}, {nameof(CanRequestSponsoring)}: {CanRequestSponsoring}, {nameof(CanManageTeamMembers)}: {CanManageTeamMembers}, {nameof(TeamWalletChargePaymentType)}: ({TeamWalletChargePaymentType}), {nameof(CanConfigureChargePoints)}: {CanConfigureChargePoints}, {nameof(CanPayForChargesCountryIds)}.Count: {CanPayForChargesCountryIds?.Count ?? 0}";
}