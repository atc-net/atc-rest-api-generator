//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator x.x.x.x.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Monta.ApiClient.Generated.Contracts.Subscriptions;

/// <summary>
/// CreateSubscription.
/// </summary>
[GeneratedCode("ApiGenerator", "x.x.x.x")]
public class CreateSubscription
{
    /// <summary>
    /// Id of the plan to subscribe to.
    /// </summary>
    [Range(0, int.MaxValue)]
    public long PlanId { get; set; }

    /// <summary>
    /// Id of the customer the subscription is created for, e.g. team or charge-point id.
    /// </summary>
    [Range(0, int.MaxValue)]
    public long CustomerId { get; set; }

    /// <summary>
    /// Type of the customer that the subscription is created for. e.g. team or charge-point.
    /// </summary>
    [Required]
    public SubscriptionCustomerType CustomerType { get; set; }

    /// <summary>
    /// Allows to modify the absolute discount on a subscription if provided.
    /// If not provided, the discount of the plan is used.
    /// Note: If you want to set it on an existing subscription, you have to cancel the subscription first.
    /// </summary>
    public double? DiscountAbsolute { get; set; }

    /// <summary>
    /// Allows to modify the percentage discount on a subscription if provided.
    /// If not provided, the discount of the plan is used.
    /// Note: If you want to set it on an existing subscription, you have to cancel the subscription first.
    /// </summary>
    public double? DiscountPercentage { get; set; }

    /// <summary>
    /// Configure the subscription, based on the plans serviceType.Currently you can configure tax-refund subscriptions only.
    /// </summary>
    public SubscriptionServiceConfig? ServiceConfig { get; set; }

    /// <summary>
    /// The user that should be assigned as the purchaser of the subscription. If not provided, the subscription will be assigned to the default user for this consumer.
    /// </summary>
    [Range(0, int.MaxValue)]
    public long? UserId { get; set; }

    /// <inheritdoc />
    public override string ToString()
        => $"{nameof(PlanId)}: {PlanId}, {nameof(CustomerId)}: {CustomerId}, {nameof(CustomerType)}: ({CustomerType}), {nameof(DiscountAbsolute)}: {DiscountAbsolute}, {nameof(DiscountPercentage)}: {DiscountPercentage}, {nameof(ServiceConfig)}: ({ServiceConfig}), {nameof(UserId)}: {UserId}";
}