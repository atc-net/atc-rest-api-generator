//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator x.x.x.x.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Monta.ApiClient.Generated.Contracts.Reports;

/// <summary>
/// ReportDto.
/// </summary>
[GeneratedCode("ApiGenerator", "x.x.x.x")]
public class ReportDto
{
    /// <summary>
    /// Id of the report.
    /// </summary>
    [Required]
    public long Id { get; set; }

    /// <summary>
    /// Id of the user who reported.
    /// </summary>
    public long? ReportedByUserId { get; set; }

    /// <summary>
    /// Id of the operator related to the report.
    /// </summary>
    [Required]
    public long OperatorId { get; set; }

    /// <summary>
    /// Type of the relation.
    /// </summary>
    [Required]
    public string RelationType { get; set; }

    /// <summary>
    /// Id of the relation.
    /// </summary>
    [Required]
    public long RelationId { get; set; }

    /// <summary>
    /// Body of the report.
    /// </summary>
    public string? Body { get; set; }

    /// <summary>
    /// State of the report.
    /// </summary>
    [Required]
    public string State { get; set; }

    /// <summary>
    /// Reason of the report.
    /// </summary>
    public ReasonDto? Reason { get; set; }

    /// <summary>
    /// Source of the report.
    /// </summary>
    public string? Source { get; set; }

    /// <summary>
    /// List of image URLs.
    /// </summary>
    [Required]
    public List<string> ImageUrls { get; set; }

    /// <summary>
    /// Id of the operator assigned to the report.
    /// </summary>
    public long? AssignedToOperatorId { get; set; }

    /// <summary>
    /// Id of the user assigned to the report.
    /// </summary>
    public long? AssignedToUserId { get; set; }

    /// <summary>
    /// Id of the user who resolved the report.
    /// </summary>
    public long? ResolvedByUserId { get; set; }

    /// <summary>
    /// Note from the operator.
    /// </summary>
    public string? OperatorNote { get; set; }

    /// <summary>
    /// Note from the admin.
    /// </summary>
    public string? AdminNote { get; set; }

    /// <summary>
    /// Note from the user.
    /// </summary>
    public string? UserNote { get; set; }

    /// <summary>
    /// Time when the report was resolved.
    /// </summary>
    public DateTimeOffset? ResolvedAt { get; set; }

    /// <summary>
    /// Time when the report was escalated.
    /// </summary>
    public DateTimeOffset? EscalatedAt { get; set; }

    /// <summary>
    /// Time when the report was assigned.
    /// </summary>
    public DateTimeOffset? AssignedAt { get; set; }

    /// <summary>
    /// Time when the report was created.
    /// </summary>
    [Required]
    public DateTimeOffset CreatedAt { get; set; }

    /// <summary>
    /// Time when the report was updated.
    /// </summary>
    public DateTimeOffset? UpdatedAt { get; set; }

    /// <summary>
    /// Time when the report was deleted.
    /// </summary>
    public DateTimeOffset? DeletedAt { get; set; }

    /// <inheritdoc />
    public override string ToString()
        => $"{nameof(Id)}: {Id}, {nameof(ReportedByUserId)}: {ReportedByUserId}, {nameof(OperatorId)}: {OperatorId}, {nameof(RelationType)}: {RelationType}, {nameof(RelationId)}: {RelationId}, {nameof(Body)}: {Body}, {nameof(State)}: {State}, {nameof(Reason)}: ({Reason}), {nameof(Source)}: {Source}, {nameof(ImageUrls)}.Count: {ImageUrls?.Count ?? 0}, {nameof(AssignedToOperatorId)}: {AssignedToOperatorId}, {nameof(AssignedToUserId)}: {AssignedToUserId}, {nameof(ResolvedByUserId)}: {ResolvedByUserId}, {nameof(OperatorNote)}: {OperatorNote}, {nameof(AdminNote)}: {AdminNote}, {nameof(UserNote)}: {UserNote}, {nameof(ResolvedAt)}: ({ResolvedAt}), {nameof(EscalatedAt)}: ({EscalatedAt}), {nameof(AssignedAt)}: ({AssignedAt}), {nameof(CreatedAt)}: ({CreatedAt}), {nameof(UpdatedAt)}: ({UpdatedAt}), {nameof(DeletedAt)}: ({DeletedAt})";
}