//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator x.x.x.x.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Monta.ApiClient.Generated.Contracts;

/// <summary>
/// ChargePoint.
/// </summary>
[GeneratedCode("ApiGenerator", "x.x.x.x")]
public class ChargePoint
{
    /// <summary>
    /// Id of this charge point.
    /// </summary>
    public long Id { get; set; }

    /// <summary>
    /// Id of the team.
    /// </summary>
    public long TeamId { get; set; }

    /// <summary>
    /// External Id of this entity, managed by you.
    /// </summary>
    public string? PartnerExternalId { get; set; }

    /// <summary>
    /// Custom JSON payload for this entity, managed by you.
    /// </summary>
    public List<Object>? PartnerCustomPayload { get; set; } = new List<Object>();

    /// <summary>
    /// Id of the site.
    /// </summary>
    public long? SiteId { get; set; }

    public Operator? Operator { get; set; }

    /// <summary>
    /// Creation date of this charge point.
    /// </summary>
    [Required]
    public DateTimeOffset CreatedAt { get; set; }

    /// <summary>
    /// Date this charge point was last updated.
    /// </summary>
    [Required]
    public DateTimeOffset UpdatedAt { get; set; }

    /// <summary>
    /// Date this charge point was deleted.
    /// </summary>
    public DateTimeOffset? DeletedAt { get; set; }

    /// <summary>
    /// Last date when charge point was activated.
    /// </summary>
    public DateTimeOffset? ActiveAt { get; set; }

    /// <summary>
    /// Serial number of this charge point.
    /// </summary>
    public string? SerialNumber { get; set; }

    /// <summary>
    /// Name of the charge point.
    /// </summary>
    public string? Name { get; set; }

    /// <summary>
    /// Indicates if this charge point is `public` or `private`.
    /// </summary>
    [Required]
    public string Visibility { get; set; }

    /// <summary>
    /// Max KW available at this charge point.
    /// </summary>
    public double? MaxKw { get; set; }

    /// <summary>
    /// Type of charge point (`AC` / `DC`).
    /// </summary>
    public string? Type { get; set; }

    /// <summary>
    /// A note you have entered for this charge point, e.g. via our Portal.
    /// </summary>
    public string? Note { get; set; }

    /// <summary>
    /// An operator note you have entered for this charge point, e.g. via our Portal.
    /// </summary>
    public string? OperatorNote { get; set; }

    public ChargePointState? State { get; set; }

    [Required]
    public Location Location { get; set; }

    /// <summary>
    /// List of supported connector types at this charge point (e.g. type-2, ccs, ...).
    /// </summary>
    [Required]
    public List<ChargePointConnector> Connectors { get; set; }

    [Required]
    public ChargePointDeeplinks Deeplinks { get; set; }

    /// <summary>
    /// Last meter reading (KWH) for this charge point.
    /// </summary>
    public double? LastMeterReadingKwh { get; set; }

    /// <summary>
    /// Indicates if a cable is plugged in (true).
    /// </summary>
    public bool CablePluggedIn { get; set; }

    /// <summary>
    /// The ID of the charge point model for this charge point.
    /// </summary>
    public long? ChargePointModelId { get; set; }

    /// <summary>
    /// Brand name for this charge point.
    /// </summary>
    public string? BrandName { get; set; }

    /// <summary>
    /// Model name for this charge point.
    /// </summary>
    public string? ModelName { get; set; }

    /// <summary>
    /// Current firmware version for this charge point.
    /// </summary>
    public string? FirmwareVersion { get; set; }

    public ChargePointIntegrationType? IntegrationType { get; set; }

    /// <summary>
    /// The EVSE id for this charge point.
    /// </summary>
    [Required]
    public string EvseId { get; set; }

    /// <summary>
    /// The id of the public price group for this charge point.
    /// </summary>
    public long? PriceGroupId { get; set; }

    /// <summary>
    /// The id of the cost price group for this charge point.
    /// </summary>
    public long? CostGroupId { get; set; }

    /// <summary>
    /// The id of the roaming price group for this charge point.
    /// </summary>
    public long? RoamingPriceGroupId { get; set; }

    /// <summary>
    /// The id of the sponsored price group for this charge point.
    /// </summary>
    public long? SponsoredPriceGroupId { get; set; }

    /// <summary>
    /// Indicates if this charge point is active (true) or not (false). Active = fully onboarded to Monta.
    /// </summary>
    public bool IsActive { get; set; }

    /// <summary>
    /// Indicates if the charge point can be reserved.
    /// </summary>
    public bool Reservable { get; set; }

    /// <summary>
    /// The max duration(in minutes) that this Charge Point can be reserved for&lt;br /&gt;`null` indicates that reservation is not supported.
    /// </summary>
    public int? ReservationTime { get; set; }

    /// <inheritdoc />
    public override string ToString()
        => $"{nameof(Id)}: {Id}, {nameof(TeamId)}: {TeamId}, {nameof(PartnerExternalId)}: {PartnerExternalId}, {nameof(PartnerCustomPayload)}.Count: {PartnerCustomPayload?.Count ?? 0}, {nameof(SiteId)}: {SiteId}, {nameof(Operator)}: ({Operator}), {nameof(CreatedAt)}: ({CreatedAt}), {nameof(UpdatedAt)}: ({UpdatedAt}), {nameof(DeletedAt)}: ({DeletedAt}), {nameof(ActiveAt)}: ({ActiveAt}), {nameof(SerialNumber)}: {SerialNumber}, {nameof(Name)}: {Name}, {nameof(Visibility)}: {Visibility}, {nameof(MaxKw)}: {MaxKw}, {nameof(Type)}: {Type}, {nameof(Note)}: {Note}, {nameof(OperatorNote)}: {OperatorNote}, {nameof(State)}: ({State}), {nameof(Location)}: ({Location}), {nameof(Connectors)}.Count: {Connectors?.Count ?? 0}, {nameof(Deeplinks)}: ({Deeplinks}), {nameof(LastMeterReadingKwh)}: {LastMeterReadingKwh}, {nameof(CablePluggedIn)}: {CablePluggedIn}, {nameof(ChargePointModelId)}: {ChargePointModelId}, {nameof(BrandName)}: {BrandName}, {nameof(ModelName)}: {ModelName}, {nameof(FirmwareVersion)}: {FirmwareVersion}, {nameof(IntegrationType)}: ({IntegrationType}), {nameof(EvseId)}: {EvseId}, {nameof(PriceGroupId)}: {PriceGroupId}, {nameof(CostGroupId)}: {CostGroupId}, {nameof(RoamingPriceGroupId)}: {RoamingPriceGroupId}, {nameof(SponsoredPriceGroupId)}: {SponsoredPriceGroupId}, {nameof(IsActive)}: {IsActive}, {nameof(Reservable)}: {Reservable}, {nameof(ReservationTime)}: {ReservationTime}";
}