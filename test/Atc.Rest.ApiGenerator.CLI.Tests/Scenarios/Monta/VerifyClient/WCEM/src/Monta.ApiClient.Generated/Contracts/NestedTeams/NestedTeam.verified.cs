//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator x.x.x.x.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Monta.ApiClient.Generated.Contracts.NestedTeams;

/// <summary>
/// NestedTeam.
/// </summary>
[GeneratedCode("ApiGenerator", "x.x.x.x")]
public class NestedTeam
{
    /// <summary>
    /// Id of the nested team relation.
    /// </summary>
    public long Id { get; set; }

    /// <summary>
    /// Parent team, the one who sends the invite.
    /// </summary>
    [Required]
    public PublicTeam ParentTeam { get; set; }

    /// <summary>
    /// Parent team, the one who receives the invite.
    /// </summary>
    [JsonPropertyName("nestedTeam")]
    public PublicTeam? NestedTeamProperty { get; set; }

    /// <summary>
    /// Price group applied to the nested team.
    /// </summary>
    public PriceGroup1? PriceGroup { get; set; }

    /// <summary>
    /// User who requested the invitation.
    /// </summary>
    public PublicUser? InvitedByUser { get; set; }

    /// <summary>
    /// The role assigned to the nested team.
    /// </summary>
    [Required]
    public string UserRole { get; set; }

    /// <summary>
    /// Access to parent team CPs / sites: to all or selected charge points and/or sites.
    /// </summary>
    [Required]
    public TeamMemberAccess Access { get; set; }

    /// <summary>
    /// State of the nested team invitation.
    /// </summary>
    [Required]
    public TeamMemberState State { get; set; }

    /// <summary>
    /// Selected charge points nested team has access to.
    /// </summary>
    public List<long>? SelectedChargePointIds { get; set; } = new List<long>();

    /// <summary>
    /// Internal note for this nested team.
    /// </summary>
    public string? Note { get; set; }

    /// <summary>
    /// Datetime of the creation of nested team invite.
    /// </summary>
    [Required]
    public DateTimeOffset CreatedAt { get; set; }

    /// <summary>
    /// Datetime of the update of nested team invite.
    /// </summary>
    public DateTimeOffset? UpdatedAt { get; set; }

    /// <summary>
    /// Datetime nested team was invited.
    /// </summary>
    public DateTimeOffset? InvitedAt { get; set; }

    /// <inheritdoc />
    public override string ToString()
        => $"{nameof(Id)}: {Id}, {nameof(ParentTeam)}: ({ParentTeam}), {nameof(NestedTeamProperty)}: ({NestedTeamProperty}), {nameof(PriceGroup)}: ({PriceGroup}), {nameof(InvitedByUser)}: ({InvitedByUser}), {nameof(UserRole)}: {UserRole}, {nameof(Access)}: ({Access}), {nameof(State)}: ({State}), {nameof(SelectedChargePointIds)}.Count: {SelectedChargePointIds?.Count ?? 0}, {nameof(Note)}: {Note}, {nameof(CreatedAt)}: ({CreatedAt}), {nameof(UpdatedAt)}: ({UpdatedAt}), {nameof(InvitedAt)}: ({InvitedAt})";
}