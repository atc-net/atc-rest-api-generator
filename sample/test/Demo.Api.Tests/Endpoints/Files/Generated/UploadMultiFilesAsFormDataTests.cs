using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Atc.XUnit;
using Demo.Api.Generated.Contracts.Files;
using FluentAssertions;
using Microsoft.AspNetCore.Http;
using Xunit;

//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator 2.0.130.4357.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Demo.Api.Tests.Endpoints.Files.Generated
{
    [GeneratedCode("ApiGenerator", "2.0.130.4357")]
    [Collection("Sequential-Endpoints")]
    [Trait(Traits.Category, Traits.Categories.Integration)]
    public class UploadMultiFilesAsFormDataTests : WebApiControllerBaseTest
    {
        public UploadMultiFilesAsFormDataTests(WebApiStartupFactory fixture) : base(fixture) { }

        [Theory]
        [InlineData("/api/v1/files/form-data/multiFile")]
        public async Task UploadMultiFilesAsFormData_Ok(string relativeRef)
        {
            // Arrange
            var data = GetTestFiles();

            // Act
            var response = await HttpClient.PostAsync(relativeRef, await GetMultipartFormDataContentFromFiles(data));

            // Assert
            response.Should().NotBeNull();
            response.StatusCode.Should().Be(HttpStatusCode.OK);
        }

        private async Task<MultipartFormDataContent> GetMultipartFormDataContentFromFiles(List<IFormFile> request)
        {
            var formDataContent = new MultipartFormDataContent();
            if (request is not null)
            {
                foreach (var item in request)
                {
                    var bytesContent = new ByteArrayContent(await item.GetBytes());
                    formDataContent.Add(bytesContent, "Request", item.FileName);
                }
            }

            return formDataContent;
        }
    }
}