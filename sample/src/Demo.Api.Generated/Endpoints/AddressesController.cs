using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Demo.Api.Generated.Contracts;
using Demo.Api.Generated.Contracts.Addresses;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

//------------------------------------------------------------------------------
// This code was auto-generated by ApiGenerator 2.0.121.412.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------
namespace Demo.Api.Generated.Endpoints
{
    /// <summary>
    /// Endpoint definitions.
    /// Area: Addresses.
    /// </summary>
    [ApiController]
    [Route("/api/v1/addresses")]
    [GeneratedCode("ApiGenerator", "2.0.121.412")]
    public class AddressesController : ControllerBase
    {
        /// <summary>
        /// Description: Get addresses by postal code.
        /// Operation: GetAddressesByPostalCodes.
        /// Area: Addresses.
        /// </summary>
        [HttpGet("{postalCode}")]
        [ProducesResponseType(typeof(List<Address>), StatusCodes.Status200OK)]
        [ProducesResponseType(typeof(ProblemDetails), StatusCodes.Status404NotFound)]
        public Task<ActionResult> GetAddressesByPostalCodesAsync(GetAddressesByPostalCodesParameters parameters, [FromServices] IGetAddressesByPostalCodesHandler handler, CancellationToken cancellationToken)
        {
            if (handler is null)
            {
                throw new ArgumentNullException(nameof(handler));
            }

            return InvokeGetAddressesByPostalCodesAsync(parameters, handler, cancellationToken);
        }

        private static async Task<ActionResult> InvokeGetAddressesByPostalCodesAsync(GetAddressesByPostalCodesParameters parameters, IGetAddressesByPostalCodesHandler handler, CancellationToken cancellationToken)
        {
            return await handler.ExecuteAsync(parameters, cancellationToken);
        }
    }
}